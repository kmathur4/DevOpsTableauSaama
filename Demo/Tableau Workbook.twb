<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location derived-from='https://prod-apnortheast-a.online.tableau.com/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760?rev=2.8' id='TableauWorkbook' path='/t/demosite99/workbooks' revision='1.0' site='demosite99' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='gridline'>
      <format attr='stroke-size' value='1' />
      <format attr='stroke-color' value='#ffff7f' />
      <format attr='line-pattern-only' value='dotted' />
      <format attr='line-visibility' value='off' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
        <calculation class='tableau' formula='&quot;Sales&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
        </members>
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
    </datasource>
    <datasource caption='Sample Data (POC Steps)' inline='true' name='federated.0lictpw1irnh601a5t3p51qf1ibt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='POC Steps' name='google-sheets.18tpfbn0oqj1ji1g7kemk023sr84'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='POC Steps' googleSheetId='1jqjeg6nirkvw_TY9vvqdos2PxokROZH7rwS5qJ87X5Q' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='kirti.mathur@saama.com' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='google-sheets.18tpfbn0oqj1ji1g7kemk023sr84' name='Sample Data' table='[&apos;Sample Data$&apos;]' type='table'>
          <columns gridOrigin='A1:P500:no:A1:P500:0' header='yes' outcome='2'>
            <column datatype='string' name='Customer ID' ordinal='0' />
            <column datatype='string' name='Customer Name' ordinal='1' />
            <column datatype='string' name='Segment' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='string' name='City' ordinal='4' />
            <column datatype='string' name='State' ordinal='5' />
            <column datatype='integer' name='Postal Code' ordinal='6' />
            <column datatype='string' name='Region' ordinal='7' />
            <column datatype='string' name='Product ID' ordinal='8' />
            <column datatype='string' name='Category' ordinal='9' />
            <column datatype='string' name='Sub-Category' ordinal='10' />
            <column datatype='string' name='Product Name' ordinal='11' />
            <column datatype='real' name='Sales' ordinal='12' />
            <column datatype='integer' name='Quantity' ordinal='13' />
            <column datatype='real' name='Discount' ordinal='14' />
            <column datatype='real' name='Profit' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='google-sheets.18tpfbn0oqj1ji1g7kemk023sr84' name='Sample Data' table='[&apos;Sample Data$&apos;]' type='table'>
          <columns gridOrigin='A1:P500:no:A1:P500:0' header='yes' outcome='2'>
            <column datatype='string' name='Customer ID' ordinal='0' />
            <column datatype='string' name='Customer Name' ordinal='1' />
            <column datatype='string' name='Segment' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='string' name='City' ordinal='4' />
            <column datatype='string' name='State' ordinal='5' />
            <column datatype='integer' name='Postal Code' ordinal='6' />
            <column datatype='string' name='Region' ordinal='7' />
            <column datatype='string' name='Product ID' ordinal='8' />
            <column datatype='string' name='Category' ordinal='9' />
            <column datatype='string' name='Sub-Category' ordinal='10' />
            <column datatype='string' name='Product Name' ordinal='11' />
            <column datatype='real' name='Sales' ordinal='12' />
            <column datatype='integer' name='Quantity' ordinal='13' />
            <column datatype='real' name='Discount' ordinal='14' />
            <column datatype='real' name='Profit' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P500:no:A1:P500:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sample Data' datatype='table' name='[__tableau_internal_object_id__].[Sample Data_72229AF0DD7C418782280BB4EC33DF2F]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Category,MONTH(Ship Date))' hidden='true' name='[Action (Category,MONTH(Ship Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category1]' />
          <groupfilter function='level-members' level='[tmn:Ship Date:ok]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country/Region:nk]' />
          <groupfilter function='level-members' level='[State1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Sub-Category)' hidden='true' name='[Action (Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category1]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sample Data' id='Sample Data_72229AF0DD7C418782280BB4EC33DF2F'>
            <properties context=''>
              <relation connection='google-sheets.18tpfbn0oqj1ji1g7kemk023sr84' name='Sample Data' table='[&apos;Sample Data$&apos;]' type='table'>
                <columns gridOrigin='A1:P500:no:A1:P500:0' header='yes' outcome='2'>
                  <column datatype='string' name='Customer ID' ordinal='0' />
                  <column datatype='string' name='Customer Name' ordinal='1' />
                  <column datatype='string' name='Segment' ordinal='2' />
                  <column datatype='string' name='Country/Region' ordinal='3' />
                  <column datatype='string' name='City' ordinal='4' />
                  <column datatype='string' name='State' ordinal='5' />
                  <column datatype='integer' name='Postal Code' ordinal='6' />
                  <column datatype='string' name='Region' ordinal='7' />
                  <column datatype='string' name='Product ID' ordinal='8' />
                  <column datatype='string' name='Category' ordinal='9' />
                  <column datatype='string' name='Sub-Category' ordinal='10' />
                  <column datatype='string' name='Product Name' ordinal='11' />
                  <column datatype='real' name='Sales' ordinal='12' />
                  <column datatype='integer' name='Quantity' ordinal='13' />
                  <column datatype='real' name='Discount' ordinal='14' />
                  <column datatype='real' name='Profit' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Map sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Region wise sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Region wise sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter4' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Sub-category wise sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sub-category wise sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Yearly change in sales or profit new' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Top 5 city by profit or sales in the state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Map sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Map Sales or Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Mapsalesorprofit?rev=' id='33805287' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (POC Steps)' name='federated.0lictpw1irnh601a5t3p51qf1ibt' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lictpw1irnh601a5t3p51qf1ibt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lictpw1irnh601a5t3p51qf1ibt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]' />
              <text column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]' />
              <lod column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:Country/Region:nk]' />
              <lod column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:State:nk]' />
              <geometry column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lictpw1irnh601a5t3p51qf1ibt].[Latitude (generated)]</rows>
        <cols>[federated.0lictpw1irnh601a5t3p51qf1ibt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AA45F31C-037F-4D58-8D89-C596502678A3}' />
    </worksheet>
    <worksheet name='Region wise sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#1b1b1b'>Region wise sales or profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Regionwisesalesorprofit?rev=' id='33805291' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (POC Steps)' name='federated.0lictpw1irnh601a5t3p51qf1ibt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lictpw1irnh601a5t3p51qf1ibt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lictpw1irnh601a5t3p51qf1ibt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:Region:nk]' />
              <text column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{8E2A14BC-BA54-4A81-A2BB-983B63742B06}' />
    </worksheet>
    <worksheet name='Sub-category wise sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sub Category wise sales or Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Sub-categorywisesalesorprofit?rev=' id='33805289' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (POC Steps)' name='federated.0lictpw1irnh601a5t3p51qf1ibt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lictpw1irnh601a5t3p51qf1ibt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lictpw1irnh601a5t3p51qf1ibt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]' />
              <text column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:Sub-Category:nk]' />
              <text column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]' />
              <color column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D4287B4C-17F4-465B-9E82-0891DB0206DA}' />
    </worksheet>
    <worksheet name='Top 5 city by profit or sales in the state'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'> City wise sales or profit </run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Top5citybyprofitorsalesinthestate?rev=' id='33805294' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (POC Steps)' name='federated.0lictpw1irnh601a5t3p51qf1ibt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lictpw1irnh601a5t3p51qf1ibt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lictpw1irnh601a5t3p51qf1ibt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:City:nk]' />
              <text column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{BDF740BB-19B2-4FB8-821D-C70FA9239369}' />
    </worksheet>
    <worksheet name='Total Sales/Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Medium' fontsize='9'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (POC Steps)' name='federated.0lictpw1irnh601a5t3p51qf1ibt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lictpw1irnh601a5t3p51qf1ibt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lictpw1irnh601a5t3p51qf1ibt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='left' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CCD2CA4B-029A-427F-A685-BC759951F242}' />
    </worksheet>
    <worksheet name='Yearly change in sales or profit new'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Yearly change in profit or sales Category wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Yearlychangeinsalesorprofit?rev=' id='33805290' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (POC Steps)' name='federated.0lictpw1irnh601a5t3p51qf1ibt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lictpw1irnh601a5t3p51qf1ibt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:Segment:nk]</cols>
      </table>
      <simple-id uuid='{289EAC1B-C415-4C09-9DCB-123734A8961F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Sample Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sample Superstore Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://prod-apnortheast-a.online.tableau.com/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760/Dashboard1?rev=' id='683354' path='/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760' revision='' site='tabonline7' />
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f9e9e0' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
          <members>
            <member value='&quot;Sales&quot;' />
            <member value='&quot;Profit&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='17' param='vert' w='99002' x='499' y='978'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='36' h='5379' id='18' is-fixed='true' w='99002' x='499' y='978'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92665' id='7' param='horz' w='99002' x='499' y='6357'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92665' id='5' w='91147' x='499' y='6357'>
                <zone h='58808' id='3' name='Map sales or profit' w='46303' x='499' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33857' id='10' name='Sub-category wise sales or profit' w='46303' x='499' y='65165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39204' id='11' name='Yearly change in sales or profit new' w='44844' x='46802' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19604' id='13' name='Region wise sales or profit' w='44844' x='46802' y='45561'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33857' id='15' name='Top 5 city by profit or sales in the state' w='44844' x='46802' y='65165'>
                  <layout-cache cell-count-h='5' non-cell-size-h='133' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='126' h='92665' id='6' is-fixed='true' param='vert' w='7855' x='91646' y='6357'>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7335' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='7855' x='91646' y='6357'>
                  <formatted-text>
                    <run>Select Sales or Profit</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='11980' id='49' name='Total Sales/Profit' w='7855' x='91646' y='13692'>
                  <layout-cache cell-count-w='1' fixed-size-h='90' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Sample Superstore Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='115' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='114' param='vert' w='99002' x='499' y='978'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='36' h='5379' id='18' w='99002' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58808' id='3' is-fixed='true' name='Map sales or profit' w='46303' x='499' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39204' id='11' is-fixed='true' name='Yearly change in sales or profit new' w='44844' x='46802' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7335' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='7855' x='91646' y='6357'>
                  <formatted-text>
                    <run>Select Sales or Profit</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='87' h='11980' id='49' is-fixed='true' name='Total Sales/Profit' w='7855' x='91646' y='13692'>
                  <layout-cache cell-count-w='1' fixed-size-h='90' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='149' h='19604' id='13' is-fixed='true' name='Region wise sales or profit' w='44844' x='46802' y='45561'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33857' id='10' is-fixed='true' name='Sub-category wise sales or profit' w='46303' x='499' y='65165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33857' id='15' is-fixed='true' name='Top 5 city by profit or sales in the state' w='44844' x='46802' y='65165'>
                  <layout-cache cell-count-h='5' non-cell-size-h='133' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{11572CDD-DC40-48F4-98D4-4EB7432EC0DE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Sample Dashboard'>
      <viewpoints>
        <viewpoint name='Map sales or profit'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Region wise sales or profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sub-category wise sales or profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 city by profit or sales in the state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sales/Profit'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Yearly change in sales or profit new'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2E8F5EAB-EB82-420C-AF3F-67BA50009107}' />
    </window>
    <window class='worksheet' name='Yearly change in sales or profit new'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:Category:nk]</field>
            <field>[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:Segment:nk]</field>
            <field>[federated.0lictpw1irnh601a5t3p51qf1ibt].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D389C31D-2205-49EE-8D9A-F0BB4D2B7AFA}' />
    </window>
    <window class='worksheet' hidden='true' name='Map sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:State:nk]</field>
            <field>[federated.0lictpw1irnh601a5t3p51qf1ibt].[sum:Calculation_1826772654274256898:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{65AE3888-10F3-492F-A7B8-2A524C801BE6}' />
    </window>
    <window class='worksheet' hidden='true' name='Region wise sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CA77139-D429-4E10-B1C6-0D0686D90666}' />
    </window>
    <window class='worksheet' hidden='true' name='Sub-category wise sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9FD66096-BD7F-4681-B986-D275F7CD5708}' />
    </window>
    <window class='worksheet' hidden='true' name='Top 5 city by profit or sales in the state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0lictpw1irnh601a5t3p51qf1ibt].[Set 1]</field>
            <field>[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:City:nk]</field>
            <field>[federated.0lictpw1irnh601a5t3p51qf1ibt].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{954B1EA2-203B-41DE-A9BF-1E7555F03807}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Sales/Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F96F8B17-C372-4404-B179-A90CA2A5605C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sample Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Yearly change in sales or profit new' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
