<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location derived-from='https://prod-apnortheast-a.online.tableau.com/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760?rev=2.8' id='TableauWorkbook' path='/t/demosite99/workbooks' revision='1.0' site='demosite99' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='gridline'>
      <format attr='stroke-size' value='1' />
      <format attr='stroke-color' value='#ffff7f' />
      <format attr='line-pattern-only' value='dotted' />
      <format attr='line-visibility' value='off' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
        <calculation class='tableau' formula='&quot;Sales&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
        </members>
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
    </datasource>
    <datasource caption='Sample Data (Sample Data)' inline='true' name='federated.1fbrizf005mo60112byfp1juwjmn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample Data' name='google-sheets.1syp88410kueuv18mr9ih0if6hgo'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Sample Data' googleSheetId='1VQ4dwP6IgqkhJa6VFhn3W58AokdFVxlMfupFw18HHpI' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='mathurkirti4@gmail.com' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='google-sheets.1syp88410kueuv18mr9ih0if6hgo' name='Sample Data' table='[&apos;Sample Data$&apos;]' type='table'>
          <columns gridOrigin='A1:P500:no:A1:P500:0' header='yes' outcome='2'>
            <column datatype='string' name='Customer ID' ordinal='0' />
            <column datatype='string' name='Customer Name' ordinal='1' />
            <column datatype='string' name='Segment' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='string' name='City' ordinal='4' />
            <column datatype='string' name='State' ordinal='5' />
            <column datatype='integer' name='Postal Code' ordinal='6' />
            <column datatype='string' name='Region' ordinal='7' />
            <column datatype='string' name='Product ID' ordinal='8' />
            <column datatype='string' name='Category' ordinal='9' />
            <column datatype='string' name='Sub-Category' ordinal='10' />
            <column datatype='string' name='Product Name' ordinal='11' />
            <column datatype='real' name='Sales' ordinal='12' />
            <column datatype='integer' name='Quantity' ordinal='13' />
            <column datatype='real' name='Discount' ordinal='14' />
            <column datatype='real' name='Profit' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='google-sheets.1syp88410kueuv18mr9ih0if6hgo' name='Sample Data' table='[&apos;Sample Data$&apos;]' type='table'>
          <columns gridOrigin='A1:P500:no:A1:P500:0' header='yes' outcome='2'>
            <column datatype='string' name='Customer ID' ordinal='0' />
            <column datatype='string' name='Customer Name' ordinal='1' />
            <column datatype='string' name='Segment' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='string' name='City' ordinal='4' />
            <column datatype='string' name='State' ordinal='5' />
            <column datatype='integer' name='Postal Code' ordinal='6' />
            <column datatype='string' name='Region' ordinal='7' />
            <column datatype='string' name='Product ID' ordinal='8' />
            <column datatype='string' name='Category' ordinal='9' />
            <column datatype='string' name='Sub-Category' ordinal='10' />
            <column datatype='string' name='Product Name' ordinal='11' />
            <column datatype='real' name='Sales' ordinal='12' />
            <column datatype='integer' name='Quantity' ordinal='13' />
            <column datatype='real' name='Discount' ordinal='14' />
            <column datatype='real' name='Profit' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P500:no:A1:P500:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Sample Data]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sample Data' datatype='table' name='[__tableau_internal_object_id__].[Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Category,MONTH(Ship Date))' hidden='true' name='[Action (Category,MONTH(Ship Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category1]' />
          <groupfilter function='level-members' level='[tmn:Ship Date:ok]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country/Region:nk]' />
          <groupfilter function='level-members' level='[State1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Sub-Category)' hidden='true' name='[Action (Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category1]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sample Data' id='Sample Data_C4A809D7F1D743DEBF7FBF8478F04DAF'>
            <properties context=''>
              <relation connection='google-sheets.1syp88410kueuv18mr9ih0if6hgo' name='Sample Data' table='[&apos;Sample Data$&apos;]' type='table'>
                <columns gridOrigin='A1:P500:no:A1:P500:0' header='yes' outcome='2'>
                  <column datatype='string' name='Customer ID' ordinal='0' />
                  <column datatype='string' name='Customer Name' ordinal='1' />
                  <column datatype='string' name='Segment' ordinal='2' />
                  <column datatype='string' name='Country/Region' ordinal='3' />
                  <column datatype='string' name='City' ordinal='4' />
                  <column datatype='string' name='State' ordinal='5' />
                  <column datatype='integer' name='Postal Code' ordinal='6' />
                  <column datatype='string' name='Region' ordinal='7' />
                  <column datatype='string' name='Product ID' ordinal='8' />
                  <column datatype='string' name='Category' ordinal='9' />
                  <column datatype='string' name='Sub-Category' ordinal='10' />
                  <column datatype='string' name='Product Name' ordinal='11' />
                  <column datatype='real' name='Sales' ordinal='12' />
                  <column datatype='integer' name='Quantity' ordinal='13' />
                  <column datatype='real' name='Discount' ordinal='14' />
                  <column datatype='real' name='Profit' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Map sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Region wise sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Region wise sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter4' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Sub-category wise sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sub-category wise sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Yearly change in sales or profit new' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Top 5 city by profit or sales in the state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Map sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Map Sales or Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Mapsalesorprofit?rev=' id='33805287' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (Sample Data)' name='federated.1fbrizf005mo60112byfp1juwjmn' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fbrizf005mo60112byfp1juwjmn'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fbrizf005mo60112byfp1juwjmn].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fbrizf005mo60112byfp1juwjmn].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]' />
              <text column='[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]' />
              <lod column='[federated.1fbrizf005mo60112byfp1juwjmn].[none:Country/Region:nk]' />
              <lod column='[federated.1fbrizf005mo60112byfp1juwjmn].[none:State:nk]' />
              <geometry column='[federated.1fbrizf005mo60112byfp1juwjmn].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fbrizf005mo60112byfp1juwjmn].[Latitude (generated)]</rows>
        <cols>[federated.1fbrizf005mo60112byfp1juwjmn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AA45F31C-037F-4D58-8D89-C596502678A3}' />
    </worksheet>
    <worksheet name='Region wise sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#1b1b1b'>Region wise sales or profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Regionwisesalesorprofit?rev=' id='33805291' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (Sample Data)' name='federated.1fbrizf005mo60112byfp1juwjmn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fbrizf005mo60112byfp1juwjmn'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fbrizf005mo60112byfp1juwjmn].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fbrizf005mo60112byfp1juwjmn].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fbrizf005mo60112byfp1juwjmn].[none:Region:nk]' />
              <text column='[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[federated.1fbrizf005mo60112byfp1juwjmn].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{8E2A14BC-BA54-4A81-A2BB-983B63742B06}' />
    </worksheet>
    <worksheet name='Sub-category wise sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sub Category wise sales or Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Sub-categorywisesalesorprofit?rev=' id='33805289' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (Sample Data)' name='federated.1fbrizf005mo60112byfp1juwjmn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fbrizf005mo60112byfp1juwjmn'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fbrizf005mo60112byfp1juwjmn].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fbrizf005mo60112byfp1juwjmn].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]' />
              <text column='[federated.1fbrizf005mo60112byfp1juwjmn].[none:Sub-Category:nk]' />
              <text column='[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]' />
              <color column='[federated.1fbrizf005mo60112byfp1juwjmn].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D4287B4C-17F4-465B-9E82-0891DB0206DA}' />
    </worksheet>
    <worksheet name='Top 5 city by profit or sales in the state'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'> City wise sales or profit </run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Top5citybyprofitorsalesinthestate?rev=' id='33805294' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (Sample Data)' name='federated.1fbrizf005mo60112byfp1juwjmn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fbrizf005mo60112byfp1juwjmn'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fbrizf005mo60112byfp1juwjmn].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fbrizf005mo60112byfp1juwjmn].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fbrizf005mo60112byfp1juwjmn].[none:City:nk]' />
              <text column='[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[federated.1fbrizf005mo60112byfp1juwjmn].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{BDF740BB-19B2-4FB8-821D-C70FA9239369}' />
    </worksheet>
    <worksheet name='Total Sales/Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Medium' fontsize='9'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (Sample Data)' name='federated.1fbrizf005mo60112byfp1juwjmn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fbrizf005mo60112byfp1juwjmn'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fbrizf005mo60112byfp1juwjmn].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fbrizf005mo60112byfp1juwjmn].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='left' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CCD2CA4B-029A-427F-A685-BC759951F242}' />
    </worksheet>
    <worksheet name='Yearly change in sales or profit new'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Yearly change in profit or sales Category wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Yearlychangeinsalesorprofit?rev=' id='33805290' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (Sample Data)' name='federated.1fbrizf005mo60112byfp1juwjmn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fbrizf005mo60112byfp1juwjmn'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fbrizf005mo60112byfp1juwjmn].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[federated.1fbrizf005mo60112byfp1juwjmn].[none:Segment:nk]</cols>
      </table>
      <simple-id uuid='{289EAC1B-C415-4C09-9DCB-123734A8961F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Sample Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sample Superstore Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://prod-apnortheast-a.online.tableau.com/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760/Dashboard1?rev=' id='683354' path='/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760' revision='' site='tabonline7' />
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f9e9e0' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
          <members>
            <member value='&quot;Sales&quot;' />
            <member value='&quot;Profit&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='17' param='vert' w='99002' x='499' y='978'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='36' h='5379' id='18' is-fixed='true' w='99002' x='499' y='978'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92665' id='7' param='horz' w='99002' x='499' y='6357'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92665' id='5' w='91147' x='499' y='6357'>
                <zone h='58808' id='3' name='Map sales or profit' w='46303' x='499' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33857' id='10' name='Sub-category wise sales or profit' w='46303' x='499' y='65165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39204' id='11' name='Yearly change in sales or profit new' w='44844' x='46802' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19604' id='13' name='Region wise sales or profit' w='44844' x='46802' y='45561'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33857' id='15' name='Top 5 city by profit or sales in the state' w='44844' x='46802' y='65165'>
                  <layout-cache cell-count-h='5' non-cell-size-h='133' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='126' h='92665' id='6' is-fixed='true' param='vert' w='7855' x='91646' y='6357'>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7335' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='7855' x='91646' y='6357'>
                  <formatted-text>
                    <run>Select Sales or Profit</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='11980' id='49' name='Total Sales/Profit' w='7855' x='91646' y='13692'>
                  <layout-cache cell-count-w='1' fixed-size-h='90' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Sample Superstore Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='121' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='120' param='vert' w='99002' x='499' y='978'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='36' h='5379' id='18' w='99002' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58808' id='3' is-fixed='true' name='Map sales or profit' w='46303' x='499' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39204' id='11' is-fixed='true' name='Yearly change in sales or profit new' w='44844' x='46802' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7335' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='7855' x='91646' y='6357'>
                  <formatted-text>
                    <run>Select Sales or Profit</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='87' h='11980' id='49' is-fixed='true' name='Total Sales/Profit' w='7855' x='91646' y='13692'>
                  <layout-cache cell-count-w='1' fixed-size-h='90' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='149' h='19604' id='13' is-fixed='true' name='Region wise sales or profit' w='44844' x='46802' y='45561'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33857' id='10' is-fixed='true' name='Sub-category wise sales or profit' w='46303' x='499' y='65165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33857' id='15' is-fixed='true' name='Top 5 city by profit or sales in the state' w='44844' x='46802' y='65165'>
                  <layout-cache cell-count-h='5' non-cell-size-h='133' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{11572CDD-DC40-48F4-98D4-4EB7432EC0DE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Sample Dashboard'>
      <viewpoints>
        <viewpoint name='Map sales or profit'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Region wise sales or profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sub-category wise sales or profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 city by profit or sales in the state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sales/Profit'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Yearly change in sales or profit new'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2E8F5EAB-EB82-420C-AF3F-67BA50009107}' />
    </window>
    <window class='worksheet' name='Yearly change in sales or profit new'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fbrizf005mo60112byfp1juwjmn].[none:Category:nk]</field>
            <field>[federated.1fbrizf005mo60112byfp1juwjmn].[none:Segment:nk]</field>
            <field>[federated.1fbrizf005mo60112byfp1juwjmn].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D389C31D-2205-49EE-8D9A-F0BB4D2B7AFA}' />
    </window>
    <window class='worksheet' hidden='true' name='Map sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fbrizf005mo60112byfp1juwjmn].[none:State:nk]</field>
            <field>[federated.1fbrizf005mo60112byfp1juwjmn].[sum:Calculation_1826772654274256898:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{65AE3888-10F3-492F-A7B8-2A524C801BE6}' />
    </window>
    <window class='worksheet' hidden='true' name='Region wise sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1fbrizf005mo60112byfp1juwjmn].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CA77139-D429-4E10-B1C6-0D0686D90666}' />
    </window>
    <window class='worksheet' hidden='true' name='Sub-category wise sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fbrizf005mo60112byfp1juwjmn].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9FD66096-BD7F-4681-B986-D275F7CD5708}' />
    </window>
    <window class='worksheet' hidden='true' name='Top 5 city by profit or sales in the state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1fbrizf005mo60112byfp1juwjmn].[Set 1]</field>
            <field>[federated.1fbrizf005mo60112byfp1juwjmn].[none:City:nk]</field>
            <field>[federated.1fbrizf005mo60112byfp1juwjmn].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{954B1EA2-203B-41DE-A9BF-1E7555F03807}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Sales/Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F96F8B17-C372-4404-B179-A90CA2A5605C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sample Dashboard' width='192'>
      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
      lwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Yearly change in sales or profit new' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
