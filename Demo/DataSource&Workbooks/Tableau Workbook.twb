<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <ISO8601DefaultCalendarPref />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location derived-from='https://prod-apnortheast-a.online.tableau.com/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760?rev=2.8' id='TableauWorkbook' path='/t/demosite99/workbooks' revision='1.0' site='demosite99' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='gridline'>
      <format attr='stroke-size' value='1' />
      <format attr='stroke-color' value='#ffff7f' />
      <format attr='line-pattern-only' value='dotted' />
      <format attr='line-visibility' value='off' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
        <calculation class='tableau' formula='&quot;Sales&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
        </members>
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
    </datasource>
    <datasource caption='Superstore Datasource | Project : DataSource&amp;Workbooks' inline='true' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' version='18.1'>
      <repository-location derived-from='https://prod-apnortheast-a.online.tableau.com/t/demosite99/datasources/SuperstoreDatasource?rev=1.0' id='SuperstoreDatasource_16044006165290' path='/t/demosite99/datasources' revision='1.0' site='demosite99' />
      <connection channel='https' class='sqlproxy' dbname='SuperstoreDatasource_16044006165290' directory='/dataserver' port='443' server='prod-apnortheast-a.online.tableau.com' server-ds-friendly-name='Superstore Datasource | Project : DataSource&amp;Workbooks' server-oauth='' username='' workgroup-auth-mode='prompt'>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='sqlproxy' table='[sqlproxy]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation name='sqlproxy' table='[sqlproxy]' type='table' />
          <relation name='sqlproxy' table='[sqlproxy]' type='table' />
          <relation name='sqlproxy' table='[sqlproxy]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>1</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID (Returns)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Order ID (Returns)</remote-alias>
            <ordinal>24</ordinal>
            <hidden>true</hidden>
            <layered>true</layered>
            <family>Returns</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_2AA0FE4D737A4F63970131D0E7480A03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <layered>true</layered>
            <family>People</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_D73023733B004CC1B3CB1ACF62F4A965]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>1</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region (People)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Region (People)</remote-alias>
            <ordinal>22</ordinal>
            <hidden>true</hidden>
            <layered>true</layered>
            <family>People</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_D73023733B004CC1B3CB1ACF62F4A965]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <layered>true</layered>
            <family>Returns</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_2AA0FE4D737A4F63970131D0E7480A03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>1</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>1</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <layered>true</layered>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='boolean' name='CAP_CREATE_TEMP_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES'>false</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_CASE_INSENSITIVE_CONTAINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SORT_BY'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERIES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORTS_LODJOINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORT_ANALYTIC_FUNCTIONS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_TOP_N'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_USE_QUERY_FUSION'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_LEFT'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_RIGHT'>true</attribute>
              <attribute datatype='integer' name='charset'>0</attribute>
              <attribute datatype='string' name='collation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='datasource'>&quot;<![CDATA[<?xml version='1.0' encoding='utf-8' ?>

<datasource :source-version='18.1' formatted-name='Sample - Superstore' inline='true' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
  </document-format-change-manifest>
  <repository-location derived-from='https://prod-apnortheast-a.online.tableau.com/t/demosite99/datasources/SuperstoreDatasource?rev=1.0' id='SuperstoreDatasource_16044006165290' path='/t/demosite99/datasources' revision='1.0' site='demosite99' />
  <connection channel='https' class='sqlproxy' dbname='SuperstoreDatasource_16044006165290' directory='/dataserver' port='443' server='prod-apnortheast-a.online.tableau.com'>
    <relation type='collection'>
      <relation name='sqlproxy' table='[sqlproxy]' type='table' />
      <relation name='sqlproxy' table='[sqlproxy]' type='table' />
      <relation name='sqlproxy' table='[sqlproxy]' type='table' />
    </relation>
    <cols>
      <map key='[Category]' value='[sqlproxy].[Category]' />
      <map key='[City]' value='[sqlproxy].[City]' />
      <map key='[Country/Region]' value='[sqlproxy].[Country/Region]' />
      <map key='[Customer ID]' value='[sqlproxy].[Customer ID]' />
      <map key='[Customer Name]' value='[sqlproxy].[Customer Name]' />
      <map key='[Discount]' value='[sqlproxy].[Discount]' />
      <map key='[Order Date]' value='[sqlproxy].[Order Date]' />
      <map key='[Order ID (Returns)]' value='[sqlproxy].[Order ID (Returns)]' />
      <map key='[Order ID]' value='[sqlproxy].[Order ID]' />
      <map key='[Person]' value='[sqlproxy].[Person]' />
      <map key='[Postal Code]' value='[sqlproxy].[Postal Code]' />
      <map key='[Product ID]' value='[sqlproxy].[Product ID]' />
      <map key='[Product Name]' value='[sqlproxy].[Product Name]' />
      <map key='[Profit]' value='[sqlproxy].[Profit]' />
      <map key='[Quantity]' value='[sqlproxy].[Quantity]' />
      <map key='[Region (People)]' value='[sqlproxy].[Region (People)]' />
      <map key='[Region]' value='[sqlproxy].[Region]' />
      <map key='[Returned]' value='[sqlproxy].[Returned]' />
      <map key='[Row ID]' value='[sqlproxy].[Row ID]' />
      <map key='[Sales]' value='[sqlproxy].[Sales]' />
      <map key='[Segment]' value='[sqlproxy].[Segment]' />
      <map key='[Ship Date]' value='[sqlproxy].[Ship Date]' />
      <map key='[Ship Mode]' value='[sqlproxy].[Ship Mode]' />
      <map key='[State]' value='[sqlproxy].[State]' />
      <map key='[Sub-Category]' value='[sqlproxy].[Sub-Category]' />
    </cols>
  </connection>
  <aliases enabled='yes' />
  <column aggregation='Count' datatype='string' default-type='nominal' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='Count' datatype='string' default-type='nominal' name='[Country/Region]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='Count' datatype='string' default-type='nominal' hidden='true' name='[Order ID (Returns)]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='Sum' datatype='integer' default-format='*00000' default-type='ordinal' name='[Postal Code]' pivot='key' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' user-datatype='integer' visual-totals='Default' />
  <column aggregation='Count' datatype='string' default-type='nominal' hidden='true' name='[Region (People)]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='Count' datatype='integer' default-type='ordinal' name='[Row ID]' pivot='key' role='dimension' type='ordinal' user-datatype='integer' visual-totals='Default' />
  <column aggregation='Count' datatype='string' default-type='nominal' name='[State]' pivot='key' role='dimension' semantic-role='[State].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='Count' caption='Orders' datatype='table' default-type='quantitative' name='[__tableau_internal_object_id__].[Orders_ECFCA1FB690A41FE803BC071773BA862]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
  <column aggregation='Count' caption='People' datatype='table' default-type='quantitative' name='[__tableau_internal_object_id__].[People_D73023733B004CC1B3CB1ACF62F4A965]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
  <column aggregation='Count' caption='Returns' datatype='table' default-type='quantitative' name='[__tableau_internal_object_id__].[Returns_2AA0FE4D737A4F63970131D0E7480A03]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
  <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
  <semantic-values>
    <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
  </semantic-values>
  <object-graph>
    <objects>
      <object caption='Orders' id='Orders_ECFCA1FB690A41FE803BC071773BA862'>
        <properties context=''>
          <relation name='sqlproxy' table='[sqlproxy]' type='table' />
        </properties>
      </object>
      <object caption='People' id='People_D73023733B004CC1B3CB1ACF62F4A965'>
        <properties context=''>
          <relation name='sqlproxy' table='[sqlproxy]' type='table' />
        </properties>
      </object>
      <object caption='Returns' id='Returns_2AA0FE4D737A4F63970131D0E7480A03'>
        <properties context=''>
          <relation name='sqlproxy' table='[sqlproxy]' type='table' />
        </properties>
      </object>
    </objects>
    <relationships>
      <relationship>
        <expression op='='>
          <expression op='[Region]' />
          <expression op='[Region (People)]' />
        </expression>
        <first-end-point object-id='Orders_ECFCA1FB690A41FE803BC071773BA862' />
        <second-end-point object-id='People_D73023733B004CC1B3CB1ACF62F4A965' />
      </relationship>
      <relationship>
        <expression op='='>
          <expression op='[Order ID]' />
          <expression op='[Order ID (Returns)]' />
        </expression>
        <first-end-point object-id='Orders_ECFCA1FB690A41FE803BC071773BA862' />
        <second-end-point object-id='Returns_2AA0FE4D737A4F63970131D0E7480A03' />
      </relationship>
    </relationships>
  </object-graph>
</datasource>
]]>&quot;</attribute>
              <attribute datatype='string' name='dialect-definition'>&quot;<![CDATA[<dialect-definition>
  <primary-dialect class='hyper' version='0.0.0'>
  </primary-dialect>
  <overlay-dialect-set>
    <overlay-dialect class='vizengine' version='0.1.0'>
    </overlay-dialect>
  </overlay-dialect-set>
</dialect-definition>
]]>&quot;</attribute>
              <attribute datatype='boolean' name='extract-active'>false</attribute>
              <attribute datatype='boolean' name='fast-get-server-time'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <overridable-settings>
        <date-options fiscal-year-start='january' start-of-week='sunday' />
        <default-date-format />
        <default-calendar-type>Gregorian</default-calendar-type>
      </overridable-settings>
      <aliases enabled='yes' />
      <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Country/Region]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Customer ID]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Customer Name]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Discount]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Year' datatype='date' default-type='ordinal' layered='true' name='[Order Date]' pivot='key' role='dimension' type='ordinal' user-datatype='date' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Order ID]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Person]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' default-type='ordinal' layered='true' name='[Postal Code]' pivot='key' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' user-datatype='integer' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Product ID]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Product Name]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[Quantity]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Region]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Returned]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='integer' default-type='ordinal' layered='true' name='[Row ID]' pivot='key' role='dimension' type='ordinal' user-datatype='integer' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Segment]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Year' datatype='date' default-type='ordinal' layered='true' name='[Ship Date]' pivot='key' role='dimension' type='ordinal' user-datatype='date' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Ship Mode]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[State]' pivot='key' role='dimension' semantic-role='[State].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Sub-Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <_.fcp.ObjectModelTableType.true...column aggregation='Count' caption='Orders' datatype='table' default-type='quantitative' layered='true' name='[__tableau_internal_object_id__].[Orders_ECFCA1FB690A41FE803BC071773BA862]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
      <_.fcp.ObjectModelTableType.true...column aggregation='Count' caption='People' datatype='table' default-type='quantitative' layered='true' name='[__tableau_internal_object_id__].[People_D73023733B004CC1B3CB1ACF62F4A965]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
      <_.fcp.ObjectModelTableType.true...column aggregation='Count' caption='Returns' datatype='table' default-type='quantitative' layered='true' name='[__tableau_internal_object_id__].[Returns_2AA0FE4D737A4F63970131D0E7480A03]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Category,MONTH(Ship Date))' hidden='true' name='[Action (Category,MONTH(Ship Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category1]' />
          <groupfilter function='level-members' level='[tmn:Ship Date:ok]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country/Region:nk]' />
          <groupfilter function='level-members' level='[State1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Sub-Category)' hidden='true' name='[Action (Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category1]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_ECFCA1FB690A41FE803BC071773BA862'>
            <properties context=''>
              <relation name='sqlproxy' table='[sqlproxy]' type='table' />
            </properties>
          </object>
          <object caption='People' id='People_D73023733B004CC1B3CB1ACF62F4A965'>
            <properties context=''>
              <relation name='sqlproxy' table='[sqlproxy]' type='table' />
            </properties>
          </object>
          <object caption='Returns' id='Returns_2AA0FE4D737A4F63970131D0E7480A03'>
            <properties context=''>
              <relation name='sqlproxy' table='[sqlproxy]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_ECFCA1FB690A41FE803BC071773BA862' />
            <second-end-point object-id='People_D73023733B004CC1B3CB1ACF62F4A965' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_ECFCA1FB690A41FE803BC071773BA862' />
            <second-end-point object-id='Returns_2AA0FE4D737A4F63970131D0E7480A03' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Map sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Region wise sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Region wise sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter4' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Sub-category wise sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sub-category wise sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Yearly change in sales or profit new' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Top 5 city by profit or sales in the state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Map sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Map Sales or Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Mapsalesorprofit?rev=' id='33805287' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore Datasource | Project : DataSource&amp;Workbooks' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Country/Region]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[State]' pivot='key' role='dimension' semantic-role='[State].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
              <text column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
              <lod column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Country/Region:nk]' />
              <lod column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:State:nk]' />
              <geometry column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Latitude (generated)]</rows>
        <cols>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AA45F31C-037F-4D58-8D89-C596502678A3}' />
    </worksheet>
    <worksheet name='Region wise sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#1b1b1b'>Region wise sales or profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Regionwisesalesorprofit?rev=' id='33805291' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore Datasource | Project : DataSource&amp;Workbooks' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Region]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Region:nk]' />
              <text column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{8E2A14BC-BA54-4A81-A2BB-983B63742B06}' />
    </worksheet>
    <worksheet name='Sub-category wise sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sub Category wise sales or Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Sub-categorywisesalesorprofit?rev=' id='33805289' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore Datasource | Project : DataSource&amp;Workbooks' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Sub-Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
              <text column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Sub-Category:nk]' />
              <text column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
              <color column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D4287B4C-17F4-465B-9E82-0891DB0206DA}' />
    </worksheet>
    <worksheet name='Top 5 city by profit or sales in the state'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'> City wise sales or profit </run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Top5citybyprofitorsalesinthestate?rev=' id='33805294' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore Datasource | Project : DataSource&amp;Workbooks' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:City:nk]' />
              <text column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{BDF740BB-19B2-4FB8-821D-C70FA9239369}' />
    </worksheet>
    <worksheet name='Total Sales/Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Medium' fontsize='9'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore Datasource | Project : DataSource&amp;Workbooks' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='left' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CCD2CA4B-029A-427F-A685-BC759951F242}' />
    </worksheet>
    <worksheet name='Yearly change in sales or profit new'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Yearly change in profit or sales Category wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Yearlychangeinsalesorprofit?rev=' id='33805290' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore Datasource | Project : DataSource&amp;Workbooks' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Segment]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Segment:nk]</cols>
      </table>
      <simple-id uuid='{289EAC1B-C415-4C09-9DCB-123734A8961F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Sample Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sample Superstore Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://prod-apnortheast-a.online.tableau.com/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760/Dashboard1?rev=' id='683354' path='/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760' revision='' site='tabonline7' />
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f9e9e0' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
          <members>
            <member value='&quot;Sales&quot;' />
            <member value='&quot;Profit&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='17' param='vert' w='99002' x='499' y='978'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='36' h='5379' id='18' is-fixed='true' w='99002' x='499' y='978'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92665' id='7' param='horz' w='99002' x='499' y='6357'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92665' id='5' w='91147' x='499' y='6357'>
                <zone h='58809' id='3' name='Map sales or profit' w='46304' x='499' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33856' id='10' name='Sub-category wise sales or profit' w='46304' x='499' y='65166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39205' id='11' name='Yearly change in sales or profit new' w='44843' x='46803' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19604' id='13' name='Region wise sales or profit' w='44843' x='46803' y='45562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33856' id='15' name='Top 5 city by profit or sales in the state' w='44843' x='46803' y='65166'>
                  <layout-cache cell-count-h='5' non-cell-size-h='133' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='126' h='92665' id='6' is-fixed='true' param='vert' w='7855' x='91646' y='6357'>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7335' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='7855' x='91646' y='6357'>
                  <formatted-text>
                    <run>Select Sales or Profit</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='11980' id='49' name='Total Sales/Profit' w='7855' x='91646' y='13692'>
                  <layout-cache cell-count-w='1' fixed-size-h='90' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Sample Superstore Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='101' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='100' param='vert' w='99002' x='499' y='978'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='36' h='5379' id='18' w='99002' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58809' id='3' is-fixed='true' name='Map sales or profit' w='46304' x='499' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39205' id='11' is-fixed='true' name='Yearly change in sales or profit new' w='44843' x='46803' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7335' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='7855' x='91646' y='6357'>
                  <formatted-text>
                    <run>Select Sales or Profit</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='87' h='11980' id='49' is-fixed='true' name='Total Sales/Profit' w='7855' x='91646' y='13692'>
                  <layout-cache cell-count-w='1' fixed-size-h='90' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='149' h='19604' id='13' is-fixed='true' name='Region wise sales or profit' w='44843' x='46803' y='45562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33856' id='10' is-fixed='true' name='Sub-category wise sales or profit' w='46304' x='499' y='65166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33856' id='15' is-fixed='true' name='Top 5 city by profit or sales in the state' w='44843' x='46803' y='65166'>
                  <layout-cache cell-count-h='5' non-cell-size-h='133' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{11572CDD-DC40-48F4-98D4-4EB7432EC0DE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Sample Dashboard'>
      <viewpoints>
        <viewpoint name='Map sales or profit'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Region wise sales or profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sub-category wise sales or profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 city by profit or sales in the state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sales/Profit'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Yearly change in sales or profit new'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2E8F5EAB-EB82-420C-AF3F-67BA50009107}' />
    </window>
    <window class='worksheet' name='Yearly change in sales or profit new'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Category:nk]</field>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Segment:nk]</field>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D389C31D-2205-49EE-8D9A-F0BB4D2B7AFA}' />
    </window>
    <window class='worksheet' hidden='true' name='Map sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:State:nk]</field>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{65AE3888-10F3-492F-A7B8-2A524C801BE6}' />
    </window>
    <window class='worksheet' hidden='true' name='Region wise sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CA77139-D429-4E10-B1C6-0D0686D90666}' />
    </window>
    <window class='worksheet' hidden='true' name='Sub-category wise sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9FD66096-BD7F-4681-B986-D275F7CD5708}' />
    </window>
    <window class='worksheet' hidden='true' name='Top 5 city by profit or sales in the state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Set 1]</field>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:City:nk]</field>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{954B1EA2-203B-41DE-A9BF-1E7555F03807}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Sales/Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F96F8B17-C372-4404-B179-A90CA2A5605C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sample Dashboard' width='192'>
      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
      w4fC/w8sd4rGOK7UewAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Yearly change in sales or profit new' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
