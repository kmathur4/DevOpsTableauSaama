<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <ISO8601DefaultCalendarPref />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location derived-from='https://prod-apnortheast-a.online.tableau.com/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760?rev=2.8' id='TableauWorkbook' path='/t/demosite99/workbooks' revision='1.4' site='demosite99' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='gridline'>
      <format attr='stroke-size' value='1' />
      <format attr='stroke-color' value='#ffff7f' />
      <format attr='line-pattern-only' value='dotted' />
      <format attr='line-visibility' value='off' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
        <calculation class='tableau' formula='&quot;Sales&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
        </members>
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
    </datasource>
    <datasource caption='Sample Data (Google Sheets) (2)' inline='true' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' version='18.1'>
      <repository-location id='SampleDataGoogleSheets_16043902615000' path='/t/demosite99/datasources' revision='1.1' site='demosite99' />
      <connection channel='https' class='sqlproxy' dbname='SampleDataGoogleSheets_16043902615000' directory='/dataserver' port='443' server='prod-apnortheast-a.online.tableau.com' username=''>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='sqlproxy' table='[sqlproxy]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='sqlproxy' table='[sqlproxy]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>9</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>4</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>3</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>0</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>1</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>14</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>6</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>1</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>8</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>15</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>13</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>7</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>12</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>2</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>5</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>10</ordinal>
            <layered>true</layered>
            <family>Sample Data</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='boolean' name='CAP_CREATE_TEMP_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES'>false</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_CASE_INSENSITIVE_CONTAINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SORT_BY'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERIES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORTS_LODJOINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORT_ANALYTIC_FUNCTIONS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_TOP_N'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_USE_QUERY_FUSION'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_LEFT'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_RIGHT'>true</attribute>
              <attribute datatype='integer' name='charset'>0</attribute>
              <attribute datatype='string' name='collation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='datasource'>&quot;<![CDATA[<?xml version='1.0' encoding='utf-8' ?>

<datasource :source-version='18.1' formatted-name='Sample Data (Google Sheets)' inline='true' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
  </document-format-change-manifest>
  <repository-location id='SampleDataGoogleSheets_16043902615000' path='/t/demosite99/datasources' revision='1.1' site='demosite99' />
  <connection channel='https' class='sqlproxy' dbname='SampleDataGoogleSheets_16043902615000' directory='/dataserver' port='443' server='prod-apnortheast-a.online.tableau.com'>
    <relation name='sqlproxy' table='[sqlproxy]' type='table' />
    <cols>
      <map key='[Category]' value='[sqlproxy].[Category]' />
      <map key='[City]' value='[sqlproxy].[City]' />
      <map key='[Country/Region]' value='[sqlproxy].[Country/Region]' />
      <map key='[Customer ID]' value='[sqlproxy].[Customer ID]' />
      <map key='[Customer Name]' value='[sqlproxy].[Customer Name]' />
      <map key='[Discount]' value='[sqlproxy].[Discount]' />
      <map key='[Postal Code]' value='[sqlproxy].[Postal Code]' />
      <map key='[Product ID]' value='[sqlproxy].[Product ID]' />
      <map key='[Product Name]' value='[sqlproxy].[Product Name]' />
      <map key='[Profit]' value='[sqlproxy].[Profit]' />
      <map key='[Quantity]' value='[sqlproxy].[Quantity]' />
      <map key='[Region]' value='[sqlproxy].[Region]' />
      <map key='[Sales]' value='[sqlproxy].[Sales]' />
      <map key='[Segment]' value='[sqlproxy].[Segment]' />
      <map key='[State]' value='[sqlproxy].[State]' />
      <map key='[Sub-Category]' value='[sqlproxy].[Sub-Category]' />
    </cols>
  </connection>
  <aliases enabled='yes' />
  <column aggregation='Count' datatype='string' default-type='nominal' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='Count' datatype='string' default-type='nominal' name='[Country/Region]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='Sum' datatype='integer' default-format='*00000' default-type='ordinal' name='[Postal Code]' pivot='key' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' user-datatype='integer' visual-totals='Default' />
  <column aggregation='Count' datatype='string' default-type='nominal' name='[State]' pivot='key' role='dimension' semantic-role='[State].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='Count' caption='Sample Data' datatype='table' default-type='quantitative' name='[__tableau_internal_object_id__].[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
  <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
  <semantic-values>
    <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
  </semantic-values>
  <object-graph>
    <objects>
      <object caption='Sample Data' id='Sample Data_1549B24C41A24F4F95B05CFA2E90A12D'>
        <properties context=''>
          <relation name='sqlproxy' table='[sqlproxy]' type='table' />
        </properties>
      </object>
    </objects>
  </object-graph>
</datasource>
]]>&quot;</attribute>
              <attribute datatype='string' name='dialect-definition'>&quot;<![CDATA[<dialect-definition>
  <primary-dialect class='hyper' version='0.0.0'>
  </primary-dialect>
  <overlay-dialect-set>
    <overlay-dialect class='vizengine' version='0.1.0'>
    </overlay-dialect>
  </overlay-dialect-set>
</dialect-definition>
]]>&quot;</attribute>
              <attribute datatype='boolean' name='extract-active'>false</attribute>
              <attribute datatype='boolean' name='fast-get-server-time'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <overridable-settings>
        <date-options fiscal-year-start='january' start-of-week='sunday' />
        <default-date-format />
        <default-calendar-type>Gregorian</default-calendar-type>
      </overridable-settings>
      <aliases enabled='yes' />
      <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Country/Region]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Customer ID]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Customer Name]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Discount]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' default-type='ordinal' layered='true' name='[Postal Code]' pivot='key' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' user-datatype='integer' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Product ID]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Product Name]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[Quantity]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Region]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Segment]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[State]' pivot='key' role='dimension' semantic-role='[State].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Sub-Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <_.fcp.ObjectModelTableType.true...column aggregation='Count' caption='Sample Data' datatype='table' default-type='quantitative' layered='true' name='[__tableau_internal_object_id__].[Sample Data_1549B24C41A24F4F95B05CFA2E90A12D]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Category,MONTH(Ship Date))' hidden='true' name='[Action (Category,MONTH(Ship Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category1]' />
          <groupfilter function='level-members' level='[tmn:Ship Date:ok]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country/Region:nk]' />
          <groupfilter function='level-members' level='[State1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Sub-Category)' hidden='true' name='[Action (Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category1]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sample Data' id='Sample Data_1549B24C41A24F4F95B05CFA2E90A12D'>
            <properties context=''>
              <relation name='sqlproxy' table='[sqlproxy]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Map sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Region wise sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Region wise sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter4' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Sub-category wise sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sub-category wise sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Yearly change in sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Top 5 city by profit or sales in the state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Map sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Map Sales or Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Mapsalesorprofit?rev=' id='33805287' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (Google Sheets) (2)' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Country/Region]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[State]' pivot='key' role='dimension' semantic-role='[State].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
              <text column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
              <lod column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Country/Region:nk]' />
              <lod column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:State:nk]' />
              <geometry column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Latitude (generated)]</rows>
        <cols>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AA45F31C-037F-4D58-8D89-C596502678A3}' />
    </worksheet>
    <worksheet name='Region wise sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#1b1b1b'>Region wise sales or profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Regionwisesalesorprofit?rev=' id='33805291' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (Google Sheets) (2)' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Region]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Region:nk]' />
              <text column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{8E2A14BC-BA54-4A81-A2BB-983B63742B06}' />
    </worksheet>
    <worksheet name='Sub-category wise sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sub Category wise sales or Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Sub-categorywisesalesorprofit?rev=' id='33805289' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (Google Sheets) (2)' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Sub-Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
              <text column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Sub-Category:nk]' />
              <text column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
              <color column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D4287B4C-17F4-465B-9E82-0891DB0206DA}' />
    </worksheet>
    <worksheet name='Top 5 city by profit or sales in the state'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'> City wise sales or profit </run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Top5citybyprofitorsalesinthestate?rev=' id='33805294' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (Google Sheets) (2)' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:City:nk]' />
              <text column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{BDF740BB-19B2-4FB8-821D-C70FA9239369}' />
    </worksheet>
    <worksheet name='Total Sales/Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Medium' fontsize='9'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (Google Sheets) (2)' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='left' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CCD2CA4B-029A-427F-A685-BC759951F242}' />
    </worksheet>
    <worksheet name='Yearly change in sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Yearly change in profit or sales Category wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Yearlychangeinsalesorprofit?rev=' id='33805290' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sample Data (Google Sheets) (2)' name='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Category]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Profit]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Sales]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Segment]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Segment:nk]</cols>
      </table>
      <simple-id uuid='{289EAC1B-C415-4C09-9DCB-123734A8961F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Sample Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sample Superstore Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://prod-apnortheast-a.online.tableau.com/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760/Dashboard1?rev=' id='683354' path='/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760' revision='' site='tabonline7' />
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f9e9e0' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
          <members>
            <member value='&quot;Sales&quot;' />
            <member value='&quot;Profit&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97508' id='17' param='vert' w='98576' x='712' y='1246'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='36' h='6853' id='18' is-fixed='true' w='98576' x='712' y='1246'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='90655' id='7' param='horz' w='98576' x='712' y='8099'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='90655' id='5' w='87366' x='712' y='8099'>
                <zone h='57534' id='3' name='Map sales or profit' w='44384' x='712' y='8099'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33121' id='10' name='Sub-category wise sales or profit' w='44384' x='712' y='65633'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='38355' id='11' name='Yearly change in sales or profit' w='42982' x='45096' y='8099'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19179' id='13' name='Region wise sales or profit' w='42982' x='45096' y='46454'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33121' id='15' name='Top 5 city by profit or sales in the state' w='42982' x='45096' y='65633'>
                  <layout-cache cell-count-h='5' non-cell-size-h='133' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='126' h='90655' id='6' is-fixed='true' param='vert' w='11210' x='88078' y='8099'>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='9346' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='11210' x='88078' y='8099'>
                  <formatted-text>
                    <run>Select Sales or Profit</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='15265' id='49' name='Total Sales/Profit' w='11210' x='88078' y='17445'>
                  <layout-cache cell-count-w='1' fixed-size-h='90' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Sample Superstore Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='77' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97508' id='76' param='vert' w='98576' x='712' y='1246'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='36' h='6853' id='18' w='98576' x='712' y='1246'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57534' id='3' is-fixed='true' name='Map sales or profit' w='44384' x='712' y='8099'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38355' id='11' is-fixed='true' name='Yearly change in sales or profit' w='42982' x='45096' y='8099'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='9346' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='11210' x='88078' y='8099'>
                  <formatted-text>
                    <run>Select Sales or Profit</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='114' h='15265' id='49' is-fixed='true' name='Total Sales/Profit' w='11210' x='88078' y='17445'>
                  <layout-cache cell-count-w='1' fixed-size-h='90' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='145' h='19179' id='13' is-fixed='true' name='Region wise sales or profit' w='42982' x='45096' y='46454'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='257' h='33121' id='10' is-fixed='true' name='Sub-category wise sales or profit' w='44384' x='712' y='65633'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='257' h='33121' id='15' is-fixed='true' name='Top 5 city by profit or sales in the state' w='42982' x='45096' y='65633'>
                  <layout-cache cell-count-h='5' non-cell-size-h='133' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{11572CDD-DC40-48F4-98D4-4EB7432EC0DE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Sample Dashboard'>
      <viewpoints>
        <viewpoint name='Map sales or profit'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Region wise sales or profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sub-category wise sales or profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 city by profit or sales in the state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sales/Profit'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Yearly change in sales or profit'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2E8F5EAB-EB82-420C-AF3F-67BA50009107}' />
    </window>
    <window class='worksheet' name='Yearly change in sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Category:nk]</field>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Segment:nk]</field>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D389C31D-2205-49EE-8D9A-F0BB4D2B7AFA}' />
    </window>
    <window class='worksheet' hidden='true' name='Map sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:State:nk]</field>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[sum:Calculation_1826772654274256898:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{65AE3888-10F3-492F-A7B8-2A524C801BE6}' />
    </window>
    <window class='worksheet' hidden='true' name='Region wise sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CA77139-D429-4E10-B1C6-0D0686D90666}' />
    </window>
    <window class='worksheet' hidden='true' name='Sub-category wise sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9FD66096-BD7F-4681-B986-D275F7CD5708}' />
    </window>
    <window class='worksheet' hidden='true' name='Top 5 city by profit or sales in the state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[Set 1]</field>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:City:nk]</field>
            <field>[sqlproxy.1y2ct8r0qhdyn819sa6kg12bxnpt].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{954B1EA2-203B-41DE-A9BF-1E7555F03807}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Sales/Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F96F8B17-C372-4404-B179-A90CA2A5605C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sample Dashboard' width='192'>
      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
      cs0EgJFrvwCjhLG7wekLAwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Yearly change in sales or profit' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAct0lEQVR4nO3dd3QU97338ffMbJO0Rb13ITqI3gQmgDEGB/cexzV+HKc9SZ48Sc5zn3ty
      732S3NyTfhOfxMdOc2zHCXGJ44Ix4AIYg+gIBJJQQah3aVfaOvP8IQkQEiGBNVpnv69zdBC7
      szO/hfnM/OY3v/n9FMMwDISIQoqiKOpEF0KIiWQa+cUwDDD0iSyLEFfd2QBg6AQ6zkxgUYS4
      +qQKJKKaBEBENQmAiGoSABHVTJdeREwEPeSnu6ON9p4BQiiYbXZSU5NxxZhRJrpwfwdDD9HZ
      XE+fKZm8FCdahB5qJQARyaD6w7/y1J+3c+BUK15dxZGczfLr7+Erdy8kbqKL93fQfR42P/Nf
      7Ey6lx88uBK7ZaJLND4JQCQarObZ329loOga/vW+mTg0P201Few63YYXiGPovo0eCqEbBigq
      mqaiKMrw2cFAD+mE9KGb/KqqAMrwnwahkI6iqqDr6Cho2tDvId0ARRm1LsPQCYV0DANQFEya
      hqKc2z6qimIYhHR9+LMaqgKhUAjdGDoTBIMBAupQGVUlss5fEoBI5Oujw2thasl8FpVMItak
      wpz5rD+7QIjaA1t5+pk/s+tUF87cudzzwKe4ZX4eMSYFT/spNj33eza9e5xe4pg7fy7O1Cwe
      veNGUjzH+e4Pfo1pzlK8B7ZzsCeJhx5aT/f+rby26wQ+ZwH3P/Y49ywtwBzycOrAu3z/qT9y
      rNlLQv48vvyFR1g+NQX6O3ni379J5/Q1JDYdYnPZKfyx2Xz+m/+XW+YM8Muvf5cX6jqAJ9jw
      6hOQu5AffeNxlhS4Ju7fdRwRWjOLco485mQGeXvTb/nh039k66EaerwhRjpt6V2VPPXbF2mO
      n8vDD97PivQe/vSbVyjvGABfJ++89Af+VNbLspvv5vMP3EKOfpqTZ9yc6/Tl5tiRWnKW3MA0
      h5ff/eZVmmKncM99d7PA2c7WPeX0e4N01uznl79+BdO0tXzu4btY6mriyWdeprIrMLyeXg7s
      PoQvfQ4P3HcbS5I9vPnX3bSHElh+00ZKC+PInLmCzz7yIF+6Yw15ibar/S95SXIGiERaErc/
      /llCz/2BLTu2UPbB+yTlzeXRR+5gSX48dQfeozaUy2c/8xArsm30zEmn+ye/Z29NL1Mzm9lV
      XseSu77Gl9dPJtakcjyukfId52/Aydq77+fB+Zm801NBb98sHn9kHRkmne3d+/l5yyDBwCBV
      R/ZTHTOXHz9yB/kuM/2Lk/nSv7zG8doOJk02A4msvPlOHl9bgsMM+/wV/OhIG32DDkquWcHx
      A6/SnzSXWzfKNYD4hygk5szi8W9M576Oera99Q7vfFjG93+u8dPv3ENzYzdB3UJT5R62VAID
      nfhVH+3dAQbjB3B7kli9OIc4swaAqqkXnOpNxNnjsJpUrCYwW2Ox28yoIT8mkwYYEAzQ2d4O
      tiyOln3ICRWMUC82k49e9wAhXIAJu8NBrNWECtgsKoaho3+M+hdLACJRKERIVdEUDUdKITff
      m8PsbAv/8uwBKtosZDisGKF+fEGG/gdjk7j2pk+ROSUZpf80KG66e4OQdgVlUFViYmMxvL6h
      jpIoKJqLmz59H0VTU9Hwhee7TjC5BohEde/yxf94gk3vH+FkTT1V1RXsPlxD0JxFRoKJ4pkz
      iQm1UdsSJCsvn+K8DGK8TVS2DBCfnEZOmspLv93EjuN1VFUc5K2dx/H8o2Uw2SgonkJCdxWn
      fHYKCwqZnJdJoK+FM609XKrfsKppJCUlU3dkP/srT1HV0ILbG7zMf5CPjpwBIpEjjSzlHZ57
      4nv81O0DzUZa3mSuv/1GptvBNKmUR66r4rdvPsPn/+TBUK2k5hZx92fWYk7O45YN11L3u7/w
      f/73FmKScpmeZUL9R/+nFRMFs5dzx9pWfveHH/Nijw/FZCVn+jIeLl56yZtxisnK1PmlTD/4
      Ev/6jQ8gfwk//PqjLMyLrFYgZeSJMEMPSXfoiKHj7mylrqmdfm8AVDOulAyKMpOwmoZO2kGf
      m4baOlr7fRiqGVdSGvlZKcSaVQh5OV1TQ2OPF6sjmcGjf+DnxzP53v+8h2zrANU1Z7DnFpPl
      MNNZX01jKJ5phcmYDZ3OM1XUeh3MKkjHalIJDfZSVVNHlyeIoplJTs8mJy0BMwHqKytR0/LJ
      TbKjAn1NlVT32iguzsVhAj0wSHPDaRo6PRCbwLTCHFwxkXPMtablKxKAfzaDrWzZup9gYhrp
      TiuBntP87tcv4lr9EF+/q5QES2TdiJpI1rR8JXLieJUZigaKgqJHXr30iphsJLssHKmvoXX4
      pcU33sXcRSW4ZOcfI2rPALpmAVVFDXgnuihigljT8uWheBHdJAAiqkkARFSTAIioJgEQUU0C
      IKKaBEBENQmAiGoSABHVIqYrRGfNIXZWd415Pcaew5JlxTiBkM/NqZMnqGx1Y3GmMGt6MekO
      y3DPxF6O7esmd0E+juHPGoPtlJV3UTR3Mkkm6QYgxoqYM4A9JZe5M6ed+5kxlXxLPyc6BzED
      GCGOfrCN/W0KxVOKSTbaeOPdA3QPjvTl6aeyvJEBYGhUBA/le/fTELJhj5hvKSJNxJwBrI5E
      ch3n/h4abONYl8qyZcXEAHrvCcoaHay/bR7ZMQpkxaNv2caHp/vZMCVh1LoMw6C58hiHPfFc
      vzgLqypHfzG+iAnAKIZOZ2MDnbZ0liYOPU3d19CAkTuD9JjhnVmLpSjPyb6mTvQpCaNOZaHB
      Ng4eb2fq4mtIsP5jX/FAbTd7T42til1Na2elUZRmn9AyRIuIDIAeHKSytpWcSQtxmId27Z7e
      XuxOx3kFVnC5nPhO9DIA2IFQYJCuznbq9u1GmbqCkkw72nkHf0NRYeRZpov0A6zvGGBbedtH
      88X+TiW58RKAqyQiAzDQUUN9v53V2UlowyOJGYbBhYOKqYoCeujs86mevkb27BrE3RRg6QIn
      pguqPro5hrMrUVSUkP8j/iYi0kXg5aGX6iMncU6eRUrsueJZLVYCwdCoJX3+AEqMjZHhlpxJ
      k1i/cT13ri3gxM4ymtyjl9f8HjSfG83nRpHnAAQRFwCDwcaT7OtJZ/G0+FGnp7ScbNwNDfSF
      hgedMYKcaeogLSN5qJVohGIiJX8OJYludu4/QV9A5j0TFxdRATACHo4cayRjZjGp2ujqi5Y2
      iQJfNWVV7fhCOj0t1exvMjOnIGHMCAWKZmLKvHkk9tfwwclWQggxvggKgIGnu416XwyzshPG
      vq0lsHTFbAZP7uTp3/+RF96vIX3WLApd1uEFRkY/HvrdHJdE6ZKp9Jbvp6IjwMdosDJxFckz
      wRdcC7xc1sjzu05PUKmGfHXDZJZOTprQMkQDeSZYRD0JgIhqEgAR1SQAIqpJAERUkwCIqCYB
      EFFNAiCimgRARDUJgIhqEgAR1SQAIqpJAERUkwCIqCYBEFFNAiCimgRARDUJgIhqEgAR1SQA
      IqpJAERUkwCIqCYBEFFNAiCimgRARDUJgIhqEgAR1SQAIqpF1gwxhoGBga4Pj+WsKKiKgnLe
      LDEjPyPvoSjDw6MPfU5R1bPDpY8sq5y3DiHOFzkBMAz8gz0cO3yEo3VteIIGtrgEFq9YyfSU
      oYnyOhsq2HXgBE39AVRLHJNmzGXFtAwsmgo08pdn6ln2YClpAEaI3rqDvLLPz7qblpJhmcgv
      JyJVxATAAKqPllHrz2TDTctIsqkM9rXTOzKAdaiL3TvLcS5YzfVFiXjbq9j83mEq0xKZmRIz
      Zm3e3mZ2HGlj5tIVZFjk6C/GFznXAMFWKmthzvypJMWaUVSN2Ph0MlxDGfU1VFBvn8qCoiSs
      moorrYhFeXCkrnvM5BdGyE/F4XJC6VOYkSGzLYqLi5gABBtPcSYuA1PPGQ4fLafsSAUnGrsJ
      DF8PdLS24srKwjEydZJiIisjmY62TgKj1qTTUXeIk+5kSksKidHk6C8uLmKqQJ7+fjrauzl5
      OgNHjBnd18ehqkqaZq3gE5MT8fv9mGzaqM9YzGaMQS9ewAL0dlTy6osd+Dv9LLvjJpJto3f+
      kNXO+fMEKyHfVfluInJFTABAISFnCssXFmI1qSiGzpz247yw5SgtRStRFJXh2ZzO0nVjaJqj
      4b87EvIouXYWbbt20nC6i2nONGznnQFU/8DZ3w3NzJiJh0XUiZgqkCs1BXN3D4OqNtT0qWrE
      piUT7+ujbxASExNw97oJnv2EQU9fL7bEeOKGX1E1Kw5XCotWlaJWfci+um6C52VGMfSzPxgy
      bZ6IoACQVEhGsJa6tsGzF7V6Tw/dFgdOGzhyclBPV9I8MPxuyEN1nYeCnKQx06RqtmQWz8mn
      rvwozR6ZDV5cXOQEQHOxdFERJ/fsYt+JWk6ePMZr71RSVDqXDBMo9imUFvnZsWMv5afq2LN7
      Dye0TBZnO8asSlEUkoumU5oT4q3th+ny6TJNqhhXxFwDKIpCWuFs1trqOVbbRKdhIXdeKTNy
      nENHeEVh8oJrsFRXcqrhDGZHNutKCnBaRy6MnUybkzNcHVJQFAsFJYso1erw+HUSrJGTdRE5
      IiYAAIpqJjl7EiuzJ437vmaJo2j6XIqmj/euk6lznBd8wM60kplhL6f45yGHRRHVJAAiqkkA
      RFSTAIioJgEQUU0CIKKaBEBENQmAiGoSABHVJAAiqkkARFSTAIioJgEQUU0CIKKaBEBENQmA
      iGoSABHVJAAiqkkARFSTAIioJgEQUU0CIKKaBEBENQmAiGoSABHVJAAiqkkARFSTAIioJgEQ
      US1iRoc2DIOmil289mE9AfXclBcFC9dxw4wkAPzuDg6UlXHodC/WxCyWLZ5HcUrs0ITZtPH+
      Gy3M3DCbxKEVEuyt541dbSxYu5BMmSpVjCNiAgDQ0dnLpNL1rJ6SOGbWF/QBdmx+m/78Zdz/
      qWz66w/x1227sK5fSX68FfDT2dY/PGOkQcDbyY6dR7BPWSE7v7ioCKoCGfS53bjscWN3fiDY
      foJKPZ/S2bnEmjTSCmawJM3HwYa+sWvSdeqPH6MtNpf5ec5x1ibEkAgKQB89XSqq4aW7t4+e
      fg/eQOjszJDdjY3YcgtJGjmaq1bycxNpbO4kNGo9BoPdNRysCzJ/7nScZu3CDQlxVgRVgQxi
      42Ko2LuD4xgoikZcfDoLF84iy27G7fFgc1rPS6yCPTaWUF8/HsAJDLpbOXzgIP0nqklbuZFJ
      CZZRZxPdZGVknmBD1VCM0dER0SdiAqAoCay5+ZMAGIaOz9ND5b7dvH3Axb3XFP2d61DQNAgE
      dQx9nGnxDINx61ciakVQFegcRVGx2ROYWVJIqK6JbsDhcDA44EU/u5RBv8eDyeU8O0+wLS6V
      mbPnctMnF9G6+13KWwY4PwdqyI8a9KEGfSihwFX9TiIyRUwA/G43A/ro13xuDyF7HLFAYk4O
      gdM1dPiH92jdR11DLzmZSYyq5SsKtvg8Fk12cuRQOZ2+IEJcTOQEoPUYL7y+i8p2DyFdx91W
      z+ad1WTNyMcOqAnFTLU2sPNwPZ5giJaacvZ1xjA3d2wrj6Kq5EyfTZHawtYDDUgExMVEzDVA
      XOEibomp4oMP3mZrzyAWRyrzS9cxKzt+qNquxrDsuus4VLaH3z//IbbEHFasXkqW3Ty8Bisp
      GS4sAChoFgeLVy3Hv/0QJzuymZ5sluq/GEMxhtsZDT1EoOPM5a1FDzLoD6BoFmznNTvqQT/e
      oIHFYsUUMeeaIbpmAVVFDXhHvf5yWSPP7zo9QaUa8tUNk1k6OWlCyxANrGn5Snh2y7bjfP+H
      3+fJnY2jXg7W7uTr//UE26v7w7IZIcItPAEIDHDmzBma+3znvWjg6+/gZE09pzskACIyXdk1
      QHsFT28+SLDnDK3dA/TueYtfdu8dek8P0Fy5H5PJSVZqfBiKKkT4XVkA3C28/8Ee/F4PvQM+
      3LVHebfdcm7ltgTuevhBVubHXGk5hfhIXFkAClbxzC9WQcshvvXkS7iWP8JX1+SFqWhCfPTC
      0wyaOImHH3oEkyMtLKsT4mq5/AD01PP8q1sYKLiOz0z3seWtbTR0DY5dLiaBldfdyJqp0qwn
      Is/lB8AwCAaDBHUDVAsOh5OEkGXscjYHNot0SRaR6fID4Mzi5tvuQTfHgU3llltux1BU1DG3
      WxU0TQIgItPl3wfoquQH//FNvvlyBTSW8cUvf5F/e7MOi9l8wY8JbWwqhIgIlx8ARUFVFLwt
      LXTJcyXiY+ryq0AJWayYlkvZ1k184aSJlrYeTH/+bx582zp6OXsyG+9+iNvmSAuRiDyXHwDN
      xZpPP4aStIUjp2rY1tuHLaOAOUUX3PW1OclwWsdfhxAT7MruA1gSWX3z3axuO0ZQMeNYeCeP
      rcgOU9GE+OiF50ZY8hQefzSTlqYzvPHyDo439mF1ZVAydxYlxbm4rNIKJCJTeHqDqgpdJ3fw
      7e/8gGd3nmLAH6C1ag/f/3//yROvHqRHLpJFhArPGWDgDK++vA1f9mq+8vmNzEyOI+jp4oNX
      nuLnW19j4YLprC2IDcumhAin8JwBulsp7/KSPW8R8zITibFacSSms3pJCV5vD/XNPWHZjBDh
      Fp4AOBPIjzXTXnOCM+4gBmAEPRytqMNitpGa6AjLZoQIt/BUgex53LZhHl958nX+/T9rmTcl
      HU9zNQfLT1FQ+gDLCu1h2YwQ4RaeACgWilbdz4+dWbzy3mFqq0+hWlx84u4vcu+6eTjN0hVC
      RKbwBMDvoaG1k9jilXxt4VoC/iCKyRJxI0EIcaEwXQRX8+QvnuBX79cRMFTMFtn5xcdDeHbT
      pGxKc+M58e529jX2Md64tEJEovBUgVQXS2+8hdaXXmfTs69gve8GiuOH+/8oKhaLFevHZJz+
      eZZK4h1vTmgZisz3AfIE3dUQngC0lvOjX7xARUMng77jfLtqD+aRZwDsqdx63//grvnpYdnU
      Ry1LayfddmxCy2BSeyd0+9EkPAFwZXPzTbeyanCcYWjNNvLHGcBWiEgQlgCEzHFkJCdgC8aQ
      lZ2Oy2aSgWjFx8IVBkCn8oOX+NFTr9NoxBGn+ugciOW2Rz/Hg6unYLvMFOihAB0tTbhN8eSl
      OM8+UqmH/HR3dtLl8aNZYklNTiTOqg2HzUd78yCujHhGHs03Ah6a270kpCcSI49linFcWSuQ
      r5E/PfMG7qzFfP5LX+RbX3mU2+fGsPlPmzjYcfldQL2dNbz2xjZe2n2cwcC5JqWGY3vZtrec
      yvozHD28j7fKqhgMjMyq0c7Ot47RPbKw4aexYj/bDzfi1S/cghBDriwAzSfY3RvLopVrWDN3
      CtNmLeTe9cswB5s5VNVxGSs0MEJ9HN5XTcaMWSTbznvH38juQx1MXlDK9dcs4/oVJcS2VnGk
      dexYRIZh0Ndaz64aH4sXFZNgkqO/GN8VngF8DJjNxMXFMtTbQcHhcIACfZ5xBsm6FD3A6SOH
      OZ00ncVZtlGF85yqoDNzNtPTY9FUBasjg/mTbByrbefC2w66v4/9+06QOrWEgkQZl1Rc3JVf
      BPsHqD5axmZv9dDf204wMDBIQ8U+Nmv1YI6haPIMitPi/vZ6MBjoaeFoq87CJZkovZWj3u3u
      6cGVeK5+DwqJCQm463rwAud28xCNx8tod0zh+qIU5OAv/pYrC4AphjSHiZr979BwaPh4rQex
      Wa20Hd3BsxUq2FO46Z68SwbA0INUHT9JTPZMcpwW3Bc0hQeDQbTY0Scsk0mDQIAAQwHoaj3K
      c7+pJeixcsMDn8BxQSe8kM3J2XmCFRU1eBlnKfFP5coCkH8NT/9kyd9eRlExWy41KoTBYOsx
      jnbFs25h+rmbaOcxmUyEQqOvZoPBEFjMjMwSlpg2i08+sIC+svc5sL+KzKVTSLCeC43m7Tv7
      +8gUSSK6XVkANDP2OPOll7skN0d3H+Vks4b35QYUwO/ppbk/yHP9PcxZuIzZycn01/fgJ3G4
      GmTQ1d2NPaEY2/mrUqwUzllEw5vb2VMZz5qZGUhvbHExETJLZBzzPnkns8/rRdfTUMHmSjcb
      VyzAFWfFFCom8cN9HGtJZ3ZqDEFPMwdOBSlZljLmpptqdrKkdB5v7jjI0cRY5ma55MacGFeE
      BGComnT+ucRrMaFpJmxWK2ZNBS2LZfNOs3vfLprsMQQH3BgZRUxPGtvKoygKsclZrJjVxhu7
      D5C8bgU5Drk7LcYKTwC8vZyob8acmEthSmxYdjR7WgHX2UPEnFd/yZo6nzUpo+8Ex5hH6vEp
      LF9nx3V2aROphSVsiOvGapG6vhhfeALQV8NTP3sSfdGjfOe++cSGYX8z2+yk20a/pmoWklIz
      LtJR2EpKxgUX26qF1AwZk1RcXJgeiCnithXTadmznV2nOgnJAzHiYyI8ZwDdRO6ia7mx7y3+
      +PTvCN17I1MThw/fqglXQhIJseFoLRIivMITgI6T/OLpF6hscQPwq//+8bn37Knc9unHuHvB
      x+OBGBFdwjRLZBEPPfQZBvzj9ADVLKSmJ4RlM0KEW3gCYHVSVGCjub6aQ4ePcLyxF6src2h0
      6KIcGR1aRKzwBMDXxYfvbOPF7cdJKMgiRtMIuFvZ9sJe3p2+gnvXfYJJSePMICnEBAtPALpr
      eeHVrZhKP8fX7i3BqgAYeA7+mVt++iY5RbOZlCTXACLyhKcZ1GzFbtLw9vfgDuhDg+PqATp7
      +tFUjRirHP1FZArTRXA+n1xcyLc3/4VfxvSzqCgJb2ct7235kNTCVSwqkotgEZnCNDiunQU3
      fopHfM/z5+0vs3ebhh5UyJhZypcfuIF8h/TCEZEpbJ3hzI4Mbn34f3HrwyG8Az5UaywWafwR
      Ee4j6A2qYYuV6ZDEx4N0kxRR7aMJgGEQDPjx+oMYhvSME5ErTFWgENUfvMH7bU7WrlmBs3sf
      Tz//Hh0hjRkrb+Wu5flIVzgRicJzBnDX8NKLb7O/PkSMrY1NTz7HgW4zGZZuXnzhWXaf8Ydl
      M0KEW3gC0NNFzYCXuOxMXG017GkNMmP5ej5zw0I87g6qGjrDshkhwi08AbBYiFNVAm4PZ07X
      04tCQX4WBPyoiorFJO2hIjKFJwApk9g4v5Cq13/CYz/agiNvDaumqRw4XElcXDLFuclh2YwQ
      4RamO8EOlt/5AMH0PbT545i1eBHpRpCWgsXcn5vJjFRpbRWRKWw3wrS4VFatvR5fIIhugBcL
      MxaVMtnQsF3640JMiDAFwMDTWsmmTS+yeU81/ZqNlfc8xvzTf+FX1Vn827ceZkqc9AcSkSc8
      dRN/B2+/8CwvHfGx6vb7eXz9DNBczCspxN19kop6T1g2I0S4hemh+Dq2VbZRvOpxHtxYQldZ
      C8f7weV04Qv46ejpA+xh2ZQY7WdvVXGyqX/Ctv/QygLmF358u7uHJwA2Gy5Npau7i/7gcNcH
      I0B9QxOaasJll85xH5Vud4DWXt+Ebd8buPypsCJBeAIQX8jGJfl8668v8b1AA1OU05zoauJn
      bcdIyFnNvEKZJlVEpjDNFB/Hwju+wHfTXufFdw+zt9+PogWxz7mVr9xzLdlx0gwqIlP4mkEt
      ccy/9k7mX3s7fm8AxWLFLPu9iHCXHwDDGHr4fZzuziaLGdDRdUBRUBgasvxvry7E6eMHKDvZ
      QFu/D9XqYPLMOZROy8KqDX02MNDNobI97K/vwZaYw/Kl8yhMtKEqCkPTpLYyY91MEobLp7sb
      eHNnC3PXLCTTIs2wYqzLD0B3Lb/Z9FfKz1yiBSI2kWs33smGmZfoDuFuoLzVwuJV68ly2fC7
      W9i1/T1eHLyGuxZmoumD7HjzTXpyl/Hpe3PorzvIq1t2YN7wCfJcFoYmyu5lqN+pQdDXxY73
      DmGdvFx2fnFR/x/SfOaVVuLCPQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
