<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location derived-from='https://prod-apnortheast-a.online.tableau.com/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760?rev=2.8' id='TableauWorkbook' path='/t/demosite99/workbooks' revision='1.0' site='demosite99' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='gridline'>
      <format attr='stroke-size' value='1' />
      <format attr='stroke-color' value='#ffff7f' />
      <format attr='line-pattern-only' value='dotted' />
      <format attr='line-visibility' value='off' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
        <calculation class='tableau' formula='&quot;Sales&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
        </members>
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
    </datasource>
    <datasource caption='Superstore Datasource (local copy) (2)' inline='true' name='Superstore Datasource (local copy) (copy)' version='18.1'>
      <repository-location id='SuperstoreDatasource' path='/t/demosite99/datasources' revision='1.0' site='demosite99' />
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0ozsbj20cdelf51evvdk71kugqg0 (copy)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kmathur1/Desktop/DevOpsTableauSaama5/Demo DevOps/DataSource&amp;Workbooks/Tableau Workbook.twb Files/Data/en_US-US/Sample - Superstore.xls' interpretationMode='0' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0 (copy)' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0 (copy)' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country/Region' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0 (copy)' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0 (copy)' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country/Region]' value='[Orders].[Country/Region]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B801:no:A1:B801:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_ECFCA1FB690A41FE803BC071773BA862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_D73023733B004CC1B3CB1ACF62F4A965]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_D73023733B004CC1B3CB1ACF62F4A965]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_2AA0FE4D737A4F63970131D0E7480A03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_2AA0FE4D737A4F63970131D0E7480A03]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' hidden='true' name='[Order ID (Returns)]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' hidden='true' name='[Region (People)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_ECFCA1FB690A41FE803BC071773BA862]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_D73023733B004CC1B3CB1ACF62F4A965]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_2AA0FE4D737A4F63970131D0E7480A03]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Category,MONTH(Ship Date))' hidden='true' name='[Action (Category,MONTH(Ship Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category1]' />
          <groupfilter function='level-members' level='[tmn:Ship Date:ok]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country/Region:nk]' />
          <groupfilter function='level-members' level='[State1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment1]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Sub-Category)' hidden='true' name='[Action (Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category1]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_ECFCA1FB690A41FE803BC071773BA862'>
            <properties context=''>
              <relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0 (copy)' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_D73023733B004CC1B3CB1ACF62F4A965'>
            <properties context=''>
              <relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0 (copy)' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_2AA0FE4D737A4F63970131D0E7480A03'>
            <properties context=''>
              <relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0 (copy)' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_ECFCA1FB690A41FE803BC071773BA862' />
            <second-end-point object-id='People_D73023733B004CC1B3CB1ACF62F4A965' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_ECFCA1FB690A41FE803BC071773BA862' />
            <second-end-point object-id='Returns_2AA0FE4D737A4F63970131D0E7480A03' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Map sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Region wise sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Region wise sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter4' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Sub-category wise sales or profit' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sub-category wise sales or profit' />
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Yearly change in sales or profit new' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sample Dashboard' type='sheet' worksheet='Top 5 city by profit or sales in the state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sample Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Map sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Map Sales or Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Mapsalesorprofit?rev=' id='33805287' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore Datasource (local copy) (2)' name='Superstore Datasource (local copy) (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Superstore Datasource (local copy) (copy)'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Superstore Datasource (local copy) (copy)].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Superstore Datasource (local copy) (copy)].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]' />
              <text column='[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]' />
              <lod column='[Superstore Datasource (local copy) (copy)].[none:Country/Region:nk]' />
              <lod column='[Superstore Datasource (local copy) (copy)].[none:State:nk]' />
              <geometry column='[Superstore Datasource (local copy) (copy)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Superstore Datasource (local copy) (copy)].[Latitude (generated)]</rows>
        <cols>[Superstore Datasource (local copy) (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AA45F31C-037F-4D58-8D89-C596502678A3}' />
    </worksheet>
    <worksheet name='Region wise sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#1b1b1b'>Region wise sales or profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Regionwisesalesorprofit?rev=' id='33805291' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore Datasource (local copy) (2)' name='Superstore Datasource (local copy) (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Superstore Datasource (local copy) (copy)'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Superstore Datasource (local copy) (copy)].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Superstore Datasource (local copy) (copy)].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Superstore Datasource (local copy) (copy)].[none:Region:nk]' />
              <text column='[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[Superstore Datasource (local copy) (copy)].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{8E2A14BC-BA54-4A81-A2BB-983B63742B06}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4BDC0AE6-4895-4FC6-862B-29656D9B87E4}' />
    </worksheet>
    <worksheet name='Sub-category wise sales or profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sub Category wise sales or Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Sub-categorywisesalesorprofit?rev=' id='33805289' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore Datasource (local copy) (2)' name='Superstore Datasource (local copy) (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Superstore Datasource (local copy) (copy)'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Superstore Datasource (local copy) (copy)].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Superstore Datasource (local copy) (copy)].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]' />
              <text column='[Superstore Datasource (local copy) (copy)].[none:Sub-Category:nk]' />
              <text column='[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]' />
              <color column='[Superstore Datasource (local copy) (copy)].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D4287B4C-17F4-465B-9E82-0891DB0206DA}' />
    </worksheet>
    <worksheet name='Top 5 city by profit or sales in the state'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'> City wise sales or profit </run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Top5citybyprofitorsalesinthestate?rev=' id='33805294' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore Datasource (local copy) (2)' name='Superstore Datasource (local copy) (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Superstore Datasource (local copy) (copy)'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Superstore Datasource (local copy) (copy)].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Superstore Datasource (local copy) (copy)].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Superstore Datasource (local copy) (copy)].[none:City:nk]' />
              <text column='[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[Superstore Datasource (local copy) (copy)].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{BDF740BB-19B2-4FB8-821D-C70FA9239369}' />
    </worksheet>
    <worksheet name='Total Sales/Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Medium' fontsize='9'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore Datasource (local copy) (2)' name='Superstore Datasource (local copy) (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Superstore Datasource (local copy) (copy)'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Superstore Datasource (local copy) (copy)].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Superstore Datasource (local copy) (copy)].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='left' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CCD2CA4B-029A-427F-A685-BC759951F242}' />
    </worksheet>
    <worksheet name='Yearly change in sales or profit new'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Yearly change in profit or sales Category wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/SampleSuperstoreDataAnalysis_15906164735370/Yearlychangeinsalesorprofit?rev=' id='33805290' path='/workbooks/SampleSuperstoreDataAnalysis_15906164735370' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore Datasource (local copy) (2)' name='Superstore Datasource (local copy) (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Superstore Datasource (local copy) (copy)'>
            <column caption=' Sales or Profit' datatype='real' name='[Calculation_1826772654274256898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]==&quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Parameter 1]==&quot;Profit&quot;&#13;&#10;THEN [Profit]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1826772654274256898]' derivation='Sum' name='[sum:Calculation_1826772654274256898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Superstore Datasource (local copy) (copy)].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]</rows>
        <cols>[Superstore Datasource (local copy) (copy)].[none:Segment:nk]</cols>
      </table>
      <simple-id uuid='{289EAC1B-C415-4C09-9DCB-123734A8961F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Sample Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sample Superstore Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://prod-apnortheast-a.online.tableau.com/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760/Dashboard1?rev=' id='683354' path='/t/tabonline7/workbooks/SampleSuperstoreDataAnalysis_16033837120760' revision='' site='tabonline7' />
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f9e9e0' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Hover between Sales and Profit' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
          <members>
            <member value='&quot;Sales&quot;' />
            <member value='&quot;Profit&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='17' param='vert' w='99002' x='499' y='978'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='36' h='5379' id='18' is-fixed='true' w='99002' x='499' y='978'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92665' id='7' param='horz' w='99002' x='499' y='6357'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92665' id='5' w='91147' x='499' y='6357'>
                <zone h='58808' id='3' name='Map sales or profit' w='46303' x='499' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33857' id='10' name='Sub-category wise sales or profit' w='46303' x='499' y='65165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39204' id='11' name='Yearly change in sales or profit new' w='44844' x='46802' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19604' id='13' name='Region wise sales or profit' w='44844' x='46802' y='45561'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33857' id='15' name='Top 5 city by profit or sales in the state' w='44844' x='46802' y='65165'>
                  <layout-cache cell-count-h='5' non-cell-size-h='133' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='126' h='92665' id='6' is-fixed='true' param='vert' w='7855' x='91646' y='6357'>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7335' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='7855' x='91646' y='6357'>
                  <formatted-text>
                    <run>Select Sales or Profit</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='11980' id='49' name='Total Sales/Profit' w='7855' x='91646' y='13692'>
                  <layout-cache cell-count-w='1' fixed-size-h='90' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Sample Superstore Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='111' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='110' param='vert' w='99002' x='499' y='978'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' fixed-size='36' h='5379' id='18' w='99002' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58808' id='3' is-fixed='true' name='Map sales or profit' w='46303' x='499' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39204' id='11' is-fixed='true' name='Yearly change in sales or profit new' w='44844' x='46802' y='6357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7335' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='7855' x='91646' y='6357'>
                  <formatted-text>
                    <run>Select Sales or Profit</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='87' h='11980' id='49' is-fixed='true' name='Total Sales/Profit' w='7855' x='91646' y='13692'>
                  <layout-cache cell-count-w='1' fixed-size-h='90' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='149' h='19604' id='13' is-fixed='true' name='Region wise sales or profit' w='44844' x='46802' y='45561'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33857' id='10' is-fixed='true' name='Sub-category wise sales or profit' w='46303' x='499' y='65165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33857' id='15' is-fixed='true' name='Top 5 city by profit or sales in the state' w='44844' x='46802' y='65165'>
                  <layout-cache cell-count-h='5' non-cell-size-h='133' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{11572CDD-DC40-48F4-98D4-4EB7432EC0DE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Sample Dashboard'>
      <viewpoints>
        <viewpoint name='Map sales or profit'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Region wise sales or profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sub-category wise sales or profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 city by profit or sales in the state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sales/Profit'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Yearly change in sales or profit new'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2E8F5EAB-EB82-420C-AF3F-67BA50009107}' />
    </window>
    <window class='worksheet' name='Yearly change in sales or profit new'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Superstore Datasource (local copy) (copy)].[none:Category:nk]</field>
            <field>[Superstore Datasource (local copy) (copy)].[none:Segment:nk]</field>
            <field>[Superstore Datasource (local copy) (copy)].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D389C31D-2205-49EE-8D9A-F0BB4D2B7AFA}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4C65ED37-E9AD-4FBB-AEE6-FF50D9B86004}' />
    </window>
    <window class='worksheet' hidden='true' name='Map sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Superstore Datasource (local copy) (copy)].[none:State:nk]</field>
            <field>[Superstore Datasource (local copy) (copy)].[sum:Calculation_1826772654274256898:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{65AE3888-10F3-492F-A7B8-2A524C801BE6}' />
    </window>
    <window class='worksheet' hidden='true' name='Region wise sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Superstore Datasource (local copy) (copy)].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CA77139-D429-4E10-B1C6-0D0686D90666}' />
    </window>
    <window class='worksheet' hidden='true' name='Sub-category wise sales or profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Superstore Datasource (local copy) (copy)].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9FD66096-BD7F-4681-B986-D275F7CD5708}' />
    </window>
    <window class='worksheet' hidden='true' name='Top 5 city by profit or sales in the state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Superstore Datasource (local copy) (copy)].[Set 1]</field>
            <field>[Superstore Datasource (local copy) (copy)].[none:City:nk]</field>
            <field>[Superstore Datasource (local copy) (copy)].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{954B1EA2-203B-41DE-A9BF-1E7555F03807}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Sales/Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F96F8B17-C372-4404-B179-A90CA2A5605C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sample Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Yearly change in sales or profit new' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
